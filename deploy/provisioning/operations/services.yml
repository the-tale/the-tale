
- name: download internal repositories
  import_playbook: ../tasks/internal_repositories.yml
  vars:
    internal_repositories: "{{tt_services['internal_repositories']}}"
  when: not tt_test_enviroment

- name: install The Tale
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: The Tale
    user: the_tale
    packages: "{{tt_services['the_tale']['packages']}}"
    django_settings: the_tale.settings
    port: 10000
    collect_static: true


- name: install TT Diary
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT Diary
    user: tt_diary
    packages: "{{tt_services['tt_diary']['packages']}}"
    django_settings: tt_diary.settings
    port: 10001
    collect_static: false


- name: install TT Personal Messages
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT Personal Messages
    user: tt_personal_messages
    packages: "{{tt_services['tt_personal_messages']['packages']}}"
    django_settings: tt_personal_messages.settings
    port: 10002
    collect_static: false


- name: install TT Storage
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT Storage
    user: tt_storage
    packages: "{{tt_services['tt_storage']['packages']}}"
    django_settings: tt_storage.settings
    port: 10003
    collect_static: false


- name: install TT Market
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT Market
    user: tt_market
    packages: "{{tt_services['tt_market']['packages']}}"
    django_settings: tt_market.settings
    port: 10004
    collect_static: false


- name: install TT players timers
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT players timers
    user: tt_players_timers
    packages: "{{tt_services['tt_players_timers']['packages']}}"
    django_settings: tt_timers.settings
    port: 10006
    collect_static: false


- name: install TT personal impacts
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT personal impacts
    user: tt_personal_impacts
    packages: "{{tt_services['tt_personal_impacts']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10007
    collect_static: false


- name: install TT crowd impacts
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT crowd impacts
    user: tt_crowd_impacts
    packages: "{{tt_services['tt_crowd_impacts']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10008
    collect_static: false


- name: install TT job impacts
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT job impacts
    user: tt_job_impacts
    packages: "{{tt_services['tt_job_impacts']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10009
    collect_static: false


- name: install TT fame impacts
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT fame impacts
    user: tt_fame_impacts
    packages: "{{tt_services['tt_fame_impacts']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10010
    collect_static: false


- name: install TT game chronicle
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT game chronicle
    user: tt_game_chronicle
    packages: "{{tt_services['tt_game_chronicle']['packages']}}"
    django_settings: tt_events_log.settings
    port: 10011
    collect_static: false


- name: install TT clans chronicle
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT clans chronicle
    user: tt_clans_chronicle
    packages: "{{tt_services['tt_clans_chronicle']['packages']}}"
    django_settings: tt_events_log.settings
    port: 10012
    collect_static: false


- name: install TT money spendings
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT money spendings
    user: tt_money_spendings
    packages: "{{tt_services['tt_money_spendings']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10013
    collect_static: false

- name: install TT players properties
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT players properties
    user: tt_players_properties
    packages: "{{tt_services['tt_players_properties']['packages']}}"
    django_settings: tt_properties.settings
    port: 10014
    collect_static: false

- name: install TT clans properties
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT clans properties
    user: tt_clans_properties
    packages: "{{tt_services['tt_clans_properties']['packages']}}"
    django_settings: tt_properties.settings
    port: 10015
    collect_static: false

- name: install TT matchmaker
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT matchmaker
    user: tt_matchmaker
    packages: "{{tt_services['tt_matchmaker']['packages']}}"
    django_settings: tt_matchmaker.settings
    port: 10016
    collect_static: false

- name: install TT clans currencies
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT clans currencies
    user: tt_clans_currencies
    packages: "{{tt_services['tt_clans_currencies']['packages']}}"
    django_settings: tt_bank.settings
    port: 10017
    collect_static: false

- name: install TT emissary impacts
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT emissary impacts
    user: tt_emissaries_impacts
    packages: "{{tt_services['tt_emissaries_impacts']['packages']}}"
    django_settings: tt_impacts.settings
    port: 10018
    collect_static: false

- name: install TT places effects
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT places effects
    user: tt_places_effects
    packages: "{{tt_services['tt_places_effects']['packages']}}"
    django_settings: tt_effects.settings
    port: 10019
    collect_static: false

- name: install TT emissaries events currencies
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT emissaries events currencies
    user: tt_emissaries_events_currencies
    packages: "{{tt_services['tt_emissaries_events_currencies']['packages']}}"
    django_settings: tt_bank.settings
    port: 10020
    collect_static: false


- name: install TT emissaries events uniquer
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT emissaries events uniquer
    user: tt_emissaries_events_uniquer
    packages: "{{tt_services['tt_emissaries_events_uniquer']['packages']}}"
    django_settings: tt_uniquer.settings
    port: 10021
    collect_static: false


- name: install TT discord bot
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT discord bot
    user: tt_discord
    packages: "{{tt_services['tt_discord']['packages']}}"
    django_settings: tt_discord.settings
    port: 10022
    collect_static: false

- name: install TT data protector
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT data protector
    user: tt_data_protector
    packages: "{{tt_services['tt_data_protector']['packages']}}"
    django_settings: tt_data_protector.settings
    port: 10023
    collect_static: false


- name: install TT xsolla hooks
  import_playbook: ../tasks/tt_service.yml
  vars:
    name: TT xsolla hooks
    user: tt_xsolla
    packages: "{{tt_services['tt_xsolla']['packages']}}"
    django_settings: tt_xsolla.settings
    port: 10024
    collect_static: false


- name: install services cron files
  import_playbook: ../tasks/tt_cron.yml
  when: not tt_test_enviroment


- name: host postupdate operations
  hosts: all
  become: yes
  become_user: root
  tasks:

    - name: install the_tale supervisor configs
      template: src="../templates/the-tale-supervisor.conf" dest="/etc/supervisor/conf.d/the_tale.conf"

    - name: reload supervisor configs
      raw: systemctl restart supervisor

    - name: "install authorized keys"
      authorized_key:
        user: root
        key: "{{item}}"
      with_items: "{{tt_authorized_keys}}"


- name: start TT services
  hosts: all
  become: yes
  become_user: root
  tasks:

    - name: start services
      raw: sudo supervisorctl start service:*


- name: The Tale postupdate operations
  hosts: all
  become: yes
  become_user: the_tale
  tasks:

    - name: create world
      raw: cd /home/the_tale/current && . /home/the_tale/current/venv/bin/activate && django-admin game_create_world --settings the_tale.settings

    - name: create superuser
      raw: "cd /home/the_tale/current && . /home/the_tale/current/venv/bin/activate && django-admin accounts_create_superuser --settings the_tale.settings"

    - name: sync data
      raw: cd /home/the_tale/current && . /home/the_tale/current/venv/bin/activate && django-admin portal_postupdate_operations --settings the_tale.settings